package com.srm.spring.app.dao;

import java.sql.Date;
import java.text.SimpleDateFormat;
import java.util.List;

import javax.persistence.EntityManagerFactory;

import org.hibernate.Query;
import org.hibernate.Session;
import org.hibernate.SessionFactory;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Repository;

import com.srm.spring.app.dto.CustomerCredientialsDTO;
import com.srm.spring.app.dto.CustomerDetailsDTO;
import com.srm.spring.app.model.CustomerDetails;

@Repository
public class CustomerDetailsDAO {
	
	@Autowired
	private EntityManagerFactory entityManagerFactory;
	
	
	public CustomerDetails saveCustomerDetails(CustomerDetails custdtls) throws Exception{
		try{
			Session session = entityManagerFactory.unwrap(SessionFactory.class).openSession();
			session.beginTransaction();
			session.save(custdtls);
			session.getTransaction().commit();
		}catch(Exception ex){
			throw ex;
		}
		return custdtls;
	}
	
	public CustomerDetails updateCustomerDetails(CustomerDetails custdtls) throws Exception{
		try{
			Session session = entityManagerFactory.unwrap(SessionFactory.class).openSession();
			session.beginTransaction();
			session.saveOrUpdate(custdtls);
			session.getTransaction().commit();
		}catch(Exception ex){
			throw ex;
		}
		return custdtls;
	}
	
	public CustomerDetails retrieveCustomerDetails(Integer custid) throws Exception{
		CustomerDetails obj;
		try{
			Session session = entityManagerFactory.unwrap(SessionFactory.class).openSession();
			//session.beginTransaction();
			obj=(CustomerDetails)session.get(CustomerDetails.class,custid);
			//session.getTransaction().commit();
		}catch(Exception ex){
			throw ex;
		}
		return obj;
	}
	
	
	public CustomerDetailsDTO retrieveCustomerAndCredientialDtls(Integer custid) throws Exception{
		CustomerDetailsDTO custDtls = new CustomerDetailsDTO();
		CustomerCredientialsDTO crediential = new CustomerCredientialsDTO();
		try{
			
			Session session = entityManagerFactory.unwrap(SessionFactory.class).openSession();
			
			String querystr="Select cust.custid,cust.custname,cust.fathername,cust.dod,cust.occupation,cust.panno,"
					+ "crd.credientialid,crd.username,crd.password"
					+ " from CustomerDetails cust join CustomerCredientials crd on cust.custid=crd.custid and cust.custid="+custid;
			
			Query<?> query = session.createSQLQuery(querystr);
			List<Object[]> result = (List<Object[]>) query.list();
			
			for(Object[] object : result){
				
				custDtls.setCustid(new Integer(object[0].toString()));
				custDtls.setCustname(object[1].toString());
				custDtls.setFathername(object[2].toString());
				//Date dob=(Date) new SimpleDateFormat("yyyy-MM-dd HH:mm:ss").parse(object[3].toString());
				//custDtls.setDod(dob);
				//custDtls.setDod(Date.valueOf(object[3].toString()));
				custDtls.setOccupation(object[4].toString());
				custDtls.setPanno(object[5].toString());
				crediential.setCredientialid(new Integer(object[6].toString()));
				crediential.setUsername(object[7].toString());
				crediential.setPassword(object[8].toString());
			}
				
			custDtls.setCustCredientialsDTO(crediential);
			
		}catch(Exception ex){
			throw ex;
		}
		return custDtls;
	}
	
	public CustomerDetailsDTO retrieveCustomerByHQL(Integer custid) throws Exception{
		CustomerDetailsDTO custDtls = new CustomerDetailsDTO();
		CustomerCredientialsDTO crediential = new CustomerCredientialsDTO();
		try{
			
			Session session = entityManagerFactory.unwrap(SessionFactory.class).openSession();
			
			String querystr="Select cust.custid,cust.custname,cust.fathername,cust.dod,cust.occupation,cust.panno,"
					+ "crd.credientialid,crd.username,crd.password"
					+ " from CustomerDetails cust join CustomerCredientials crd on cust.custid=crd.custid and cust.custid="+custid;
			
			Query<?> query = session.createSQLQuery(querystr);
			List<Object[]> result = (List<Object[]>) query.list();
			
			for(Object[] object : result){
				
				custDtls.setCustid(new Integer(object[0].toString()));
				custDtls.setCustname(object[1].toString());
				custDtls.setFathername(object[2].toString());
				//Date dob=(Date) new SimpleDateFormat("yyyy-MM-dd HH:mm:ss").parse(object[3].toString());
				//custDtls.setDod(dob);
				//custDtls.setDod(Date.valueOf(object[3].toString()));
				custDtls.setOccupation(object[4].toString());
				custDtls.setPanno(object[5].toString());
				crediential.setCredientialid(new Integer(object[6].toString()));
				crediential.setUsername(object[7].toString());
				crediential.setPassword(object[8].toString());
			}
				
			custDtls.setCustCredientialsDTO(crediential);
			
		}catch(Exception ex){
			throw ex;
		}
		return custDtls;
	}
	
	
	
	

}
