package com.srm.spring.app.dao;

import java.sql.Date;
import java.util.List;

import javax.persistence.EntityManagerFactory;

import org.hibernate.Query;
import org.hibernate.Session;
import org.hibernate.SessionFactory;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Repository;

import com.srm.spring.app.dto.CustomerDetailsDTO;
import com.srm.spring.app.model.CustomerDetails;

@Repository
public class CustomerDetailsDAO {
	
	@Autowired
	private EntityManagerFactory entityManagerFactory;
	
	
	public CustomerDetails saveCustomerDetails(CustomerDetails custdtls) throws Exception{
		try{
			Session session = entityManagerFactory.unwrap(SessionFactory.class).openSession();
			session.beginTransaction();
			session.save(custdtls);
			session.getTransaction().commit();
		}catch(Exception ex){
			throw ex;
		}
		return custdtls;
	}
	
	public CustomerDetails updateCustomerDetails(CustomerDetails custdtls) throws Exception{
		try{
			Session session = entityManagerFactory.unwrap(SessionFactory.class).openSession();
			session.beginTransaction();
			session.saveOrUpdate(custdtls);
			session.getTransaction().commit();
		}catch(Exception ex){
			throw ex;
		}
		return custdtls;
	}
	
	public CustomerDetails retrieveCustomerDetails(Integer custid) throws Exception{
		CustomerDetails obj;
		try{
			Session session = entityManagerFactory.unwrap(SessionFactory.class).openSession();
			//session.beginTransaction();
			obj=(CustomerDetails)session.get(CustomerDetails.class,custid);
			//session.getTransaction().commit();
		}catch(Exception ex){
			throw ex;
		}
		return obj;
	}
	
	
	public CustomerDetailsDTO retrieveCustomerDtlsWithAddressDetails(Integer custid) throws Exception{
		CustomerDetailsDTO custDtls = new CustomerDetailsDTO();
		try{
			
			Session session = entityManagerFactory.unwrap(SessionFactory.class).openSession();
			
			String querystr="Select cust.custid,cust.custname,cust.fathername,cust.dod,cust.occupation,cust.panno,"
					+ "adtls.addressid,adtls.custid,adtls.addresstype,adtls.address,adtls.street,adtls.city,adtls.pincode "
					+ "from CustomerDetails cust join CustomerAddressDetails adtls on cust.custid=adtls.cust";
			
			Query<?> query = session.createSQLQuery(querystr);
			List<Object[]> result = (List<Object[]>) query.list();
			
			for(Object[] object : result){
				
				custDtls.setCustid(new Integer(object[0].toString()));
				custDtls.setCustname(object[1].toString());
				custDtls.setFathername(object[2].toString());
				custDtls.setDod(Date.valueOf(object[2].toString()));
				custDtls.setOccupation(object[0]);
				
			}
				
			
			
		}catch(Exception ex){
			throw ex;
		}
		return custDtls;
	}
	
	
	
	

}
